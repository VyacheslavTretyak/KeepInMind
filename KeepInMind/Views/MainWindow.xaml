<Window x:Class="KeepInMind.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"   
		xmlns:local="clr-namespace:KeepInMind.ViewModels"
        xmlns:classes="clr-namespace:KeepInMind.Classes"		
		xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"		
		xmlns:tb="http://www.hardcodet.net/taskbar"		
		mc:Ignorable="d"
		TextElement.Foreground="{DynamicResource MaterialDesignBody}"		
        Background="{DynamicResource MaterialDesignPaper}"
		TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
		FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
		Title="KeepInMind" 
		Height="{Binding MainWindowRectEvent.Height, Mode=TwoWay}" 
		Width="{Binding MainWindowRectEvent.Width, Mode=TwoWay}"
		MinHeight="{Binding MainWindowRectEvent.Height, Mode=TwoWay}"
		MinWidth="{Binding MainWindowRectEvent.Width, Mode=TwoWay}"
		Top="{Binding MainWindowRectEvent.Top, Mode=TwoWay}"
		Left="{Binding MainWindowRectEvent.Left, Mode=TwoWay}"
		ResizeMode="NoResize"
		Icon="/Resources/Icon1.ico"
		FocusManager.FocusedElement="{x:Reference Name=TextBoxWord}"
		Name="ThisWindow">
	<i:Interaction.Behaviors>
		<classes:CloseWindowBehavior/>
	</i:Interaction.Behaviors>	
	<Window.DataContext>
		<local:MainViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<classes:MultyCommandConverter x:Key="MainConverter"/>
	</Window.Resources>
	<Grid Margin="16">		
		<Grid.RowDefinitions>
			<RowDefinition Height="0.5*"/>
			<RowDefinition/>
			<RowDefinition/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<materialDesign:PopupBox 
			HorizontalAlignment="Right"
			StaysOpen="True" 			
			IsEnabled="{Binding IsChecked, ElementName=PopupEnabled}">
			<Grid 						 
				Margin="8,8,8,8">
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				<Button 	
					Grid.Row="0" 
					HorizontalAlignment="Left"
					Style="{StaticResource MaterialDesignFlatButton}"
					Command="{Binding ShowNowCommand}">
					Show Now
				</Button>
				<Button 					
					Grid.Row="1" 
					HorizontalAlignment="Left"
					Style="{StaticResource MaterialDesignFlatButton}"
					Command="{Binding WordsListCommand}">
					List
				</Button>				
				<Button 					
					Grid.Row="3"
					HorizontalAlignment="Left"
					Style="{StaticResource MaterialDesignFlatButton}"
					Command="{Binding SettingsCommand}">
					Settings
				</Button>
				<Button 					
					Grid.Row="4" 
					HorizontalAlignment="Left"
					Style="{StaticResource MaterialDesignFlatButton}"
					Command="{Binding ClosingCommand}">
					Exit
				</Button>
			</Grid>
		</materialDesign:PopupBox>
		<TextBox x:Name="TextBoxWord"
				 Grid.Row="1"
				 materialDesign:HintAssist.Hint="word"
				 Margin="20"
				 Text="{Binding OriginTextEvent, Mode=TwoWay}"/>
		<TextBox x:Name="TextBoxTranslate" 
				 Grid.Row="2"
				 materialDesign:HintAssist.Hint="translate"
				 Margin="20"
				 Text="{Binding TranslateTextEvent, Mode=OneWay}"/>
		<Button x:Name="ButtonAddWord"
				Grid.Row="3"				
				HorizontalAlignment="Right"
				Command="{Binding AddWordCommand}">
			<Button.Style>
				<Style BasedOn="{StaticResource MaterialDesignFloatingActionAccentButton}" TargetType="{x:Type Button}">
					<Style.Triggers>
						<DataTrigger 
							Binding="{
								Binding Text.Length, 
								ElementName=TextBoxWord,
								UpdateSourceTrigger=PropertyChanged}" 
							Value="0">
							<Setter 
								Property="IsEnabled" 
								Value="False"/>
						</DataTrigger>
						<DataTrigger 
							Binding="{
								Binding Text.Length, 
								ElementName=TextBoxTranslate,	
								UpdateSourceTrigger=PropertyChanged}"
							Value="0">
							<Setter 
								Property="IsEnabled" 
								Value="False"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
			<Button.CommandParameter>
				<MultiBinding Converter="{StaticResource MainConverter}">
					<Binding Path="Text" 
							 ElementName="TextBoxWord"/>
					<Binding Path="Text"
							 ElementName="TextBoxTranslate"/>
				</MultiBinding>
			</Button.CommandParameter>
			<materialDesign:PackIcon 
				Kind="Plus"    
				Height="24" 
				Width="24" />
		</Button>		
		<tb:TaskbarIcon x:Name="myNotifyIcon"
            Visibility="Visible"
            IconSource="/Resources/Icon1.ico"			
			LeftClickCommand="{Binding TaskbarIconClickCommand}"
			LeftClickCommandParameter="{Binding ElementName=ThisWindow}"
			DoubleClickCommand="{Binding TaskbarIconClickCommand}"
			DoubleClickCommandParameter="{Binding ElementName=ThisWindow}">			
			<tb:TaskbarIcon.ContextMenu>
				<ContextMenu Background="{DynamicResource PrimaryHueLightBrush}">
					<MenuItem Header="Show Now" Command="{Binding ShowNowCommand}"/>
					<MenuItem Header="List" Command="{Binding WordsListCommand}" />					
					<MenuItem Header="Settings" Command="{Binding SettingsCommand}"/>
					<MenuItem Header="Exit" Command="{Binding ClosingCommand}"/>
				</ContextMenu>
			</tb:TaskbarIcon.ContextMenu>
		</tb:TaskbarIcon>
	</Grid>	
</Window>
